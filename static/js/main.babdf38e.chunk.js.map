{"version":3,"sources":["components/ElementContactList/ElementContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ElementContactList/ElementContactList.container.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","state","name","props","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","addNoRepeatContact","contacts","some","toLowerCase","alert","onSubmit","reset","handleSubmit","preventDefault","this","className","s","form","htmlFor","span","input","type","onChange","pattern","title","required","id","button","Component","defaultProps","connect","items","dispatch","contact","post","then","data","catch","error","addContact","filterInputId","filter","onChangeFilter","target","ElementContactList","deleteContact","map","item","btnList","onClick","getVisibleContacts","normalizedFilter","trim","includes","delete","ContactList","list","Container","children","container","App","onFetchContacts","get","createReducer","contactsTest","payload","action","loading","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,iCAAiC,KAAO,iCAAiC,QAAU,sC,mBCA5GD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,wB,mBCApFD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,KAAO,4B,ufCEnBC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAGlCS,EAAeT,YAAa,yBCFlCU,IAAMC,SAASC,QAAU,wBAEzB,I,OCRMC,E,4MAWJC,MAAQ,CACNC,KAAM,EAAKC,MAAMD,KACjBE,OAAQ,EAAKD,MAAMC,Q,EAGrBC,YAAcC,c,EACdC,cAAgBD,c,EAEhBE,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,mBAAqB,SAACZ,EAAOa,GAC3B,IAAQZ,EAAiBD,EAAjBC,KAAME,EAAWH,EAAXG,OAEZU,EAASC,MACP,SAAAD,GAAQ,OAAIA,EAASZ,KAAKc,gBAAkBd,EAAKc,iBAGnDC,MAAM,GAAD,OAAIf,EAAJ,4BAGHY,EAASC,MAAK,SAAAD,GAAQ,OAAIA,EAASV,SAAWA,KAChDa,MAAM,GAAD,OAAIb,EAAJ,6BAIP,EAAKD,MAAMe,SAASjB,GACpB,EAAKkB,U,EAGPC,aAAe,SAAAX,GACbA,EAAEY,iBACF,IAAQP,EAAa,EAAKX,MAAlBW,SACR,EAAKD,mBAAmB,EAAKZ,MAAOa,I,EAGtCK,MAAQ,WACN,EAAKP,SAAS,CAAEV,KAAM,GAAIE,OAAQ,M,4CAGpC,WACE,MAAyBkB,KAAKrB,MAAtBC,EAAR,EAAQA,KAAME,EAAd,EAAcA,OAEd,OACE,mCACE,uBAAMmB,UAAWC,IAAEC,KAAMP,SAAUI,KAAKF,aAAxC,UACE,wBAAOM,QAASJ,KAAKjB,YAAakB,UAAU,QAA5C,UACE,sBAAMA,UAAWC,IAAEG,KAAnB,kBACA,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACL3B,KAAK,OACLS,MAAOT,EACP4B,SAAUR,KAAKd,aACfuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,GAAIZ,KAAKjB,iBAIb,wBAAOqB,QAASJ,KAAKf,cAAegB,UAAU,QAA9C,UACE,sBAAMA,UAAWC,IAAEG,KAAnB,oBACA,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,MACL3B,KAAK,SACLS,MAAOP,EACP0B,SAAUR,KAAKd,aACfuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,GAAIZ,KAAKf,mBAIb,wBAAQgB,UAAWC,IAAEW,OAAQN,KAAK,SAAlC,kC,GAzFgBO,aAApBpC,EACGqC,aAAe,CACpBnC,KAAM,GACNE,OAAQ,IA+FZ,I,IAQekC,eARS,SAAArC,GAAK,MAAK,CAChCa,SAAUb,EAAMa,SAASyB,UAGA,SAAAC,GAAQ,MAAK,CACtCtB,SAAU,SAAChB,EAAME,GAAP,OAAkBoC,EDtF5B,SAAC,GAAD,IAAGtC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,OACA,SAAAoC,GACE,IAAMC,EAAU,CACdvC,OACAE,UAEFoC,EAASlD,KACTO,IACG6C,KAAK,YAAaD,GAClBE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASjD,EAAkBqD,OAC9CC,OAAM,SAAAC,GAAK,OAAIN,EAAShD,EAAgBsD,QC4ERC,CAAW7C,QAGnCoC,CAA6CtC,G,iBCzGtDgD,EAAgB1C,cA8BPgC,eARS,SAAArC,GAAK,MAAK,CAChCgD,OAAQhD,EAAMgD,WAGW,SAAAT,GAAQ,MAAK,CACtCU,eAAgB,SAAAzC,GAAC,OAAI+B,EAAS5C,EAAaa,EAAE0C,OAAOxC,YAGvC2B,EA5BA,SAAC,GAAgC,IAA9BW,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACxB,OACE,wBAAOxB,QAASsB,EAAhB,UACE,sBAAMzB,UAAWC,IAAEG,KAAnB,8CACA,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLlB,MAAOsC,EACPnB,SAAUoB,EACVhB,GAAIc,U,iBCQGI,EAvBY,SAAC,GAAiC,IAA/BtC,EAA8B,EAA9BA,SAAUuC,EAAoB,EAApBA,cACtC,OAAOvC,EAASwC,KAAI,YAA2B,IAAxBpD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQ8B,EAAS,EAATA,GACnC,OACE,qBAAIX,UAAWC,IAAE+B,KAAjB,UACE,sBAAMhC,UAAWC,IAAEG,OAClBzB,EAFH,KAEWE,EACT,wBACEyB,KAAK,SACLN,UAAWC,IAAEgC,QACbC,QAAS,kBAAMJ,EAAcnB,IAH/B,sBAH0BA,OCH5BwB,EAAqB,SAAC5C,EAAUmC,GACpC,IAAMU,EAAmBV,EAAOjC,cAAc4C,OAE9C,OAAO9C,EAASmC,QACd,SAAAR,GAAO,OACLA,EAAQvC,KAAKc,cAAc6C,SAASF,IACpClB,EAAQrC,OAAOyD,SAASZ,OAYfX,eARS,SAAC,GAAD,QAAExB,SAAYyB,EAAd,EAAcA,MAAOU,EAArB,EAAqBA,OAArB,MAAoC,CAC1DnC,SAAU4C,EAAmBnB,EAAOU,OAGX,SAAAT,GAAQ,MAAK,CACtCa,cAAe,SAAAnB,GAAE,OAAIM,EJkBD,SAAAN,GAAE,OAAI,SAAAM,GAC1BA,EAAS/C,KACTI,IACGiE,OADH,oBACuB5B,IACpBS,MAAK,kBAAMH,EAAS9C,EAAqBwC,OACzCW,OAAM,SAAAC,GAAK,OAAIN,EAAS7C,EAAmBmD,QIvBhBO,CAAcnB,QAG/BI,CAA6Cc,G,iBCV7CW,EARK,WAClB,OACE,oBAAIxC,UAAWC,IAAEwC,KAAjB,SACE,cAAC,EAAD,O,iBCESC,EAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUlC,EAAb,EAAaA,MAAb,OAChB,sBAAKT,UAAWC,IAAE2C,UAAlB,UACE,oBAAI5C,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBkC,MCOCE,E,uKAKN,WACE9C,KAAKnB,MAAMkE,oB,oBAYX,WACE,OACE,eAAC,EAAD,CAAWrC,MAAM,YAAjB,UACE,cAAC,EAAD,IACA,oBAAIT,UAAU,QAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAxBUa,aAsCHE,eARS,SAAArC,GAAK,MAAK,CAChCa,SAAUb,EAAMsC,UAGS,SAAAC,GAAQ,MAAK,CACtC6B,gBAAiB,kBAAM7B,GPhCG,SAAAA,GACxBA,EAAStD,KACTW,IACGyE,IAAI,aACJ3B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASpD,EAAoBwD,OAChDC,OAAM,SAAAC,GAAK,OAAIN,EAASnD,EAAkByD,cO8BlCR,CAA6C8B,G,uBClCtD7B,GAAQgC,YAAcC,GAAD,mBACxBpF,GAAsB,SAACa,EAAD,YAASwE,WADP,cAExBlF,GAAoB,SAACU,EAAOyE,GAAR,OAAoBA,EAAOD,SAA3B,mBAAuCxE,OAFnC,cAGxBP,GAAuB,SAACO,EAAOyE,GAAR,OACtBzE,EAAMgD,QAAO,qBAAGf,KAAgBwC,EAAOD,cAJhB,IAOrBE,GAAUJ,aAAc,GAAD,mBAC1BrF,GAAsB,kBAAM,KADF,cAE1BE,GAAsB,kBAAM,KAFF,cAG1BC,GAAoB,kBAAM,KAHA,cAI1BC,GAAoB,kBAAM,KAJA,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAkB,kBAAM,KANE,cAO1BC,GAAuB,kBAAM,KAPH,cAQ1BC,GAAuB,kBAAM,KARH,cAS1BC,GAAqB,kBAAM,KATD,IAYvBsD,GAASsB,YAAc,GAAD,eACzB3E,GAAe,SAACgF,EAAGF,GAAJ,OAAeA,EAAOD,YAGzBI,eAAgB,CAC7BtC,SACAU,UACA0B,a,QCpBIG,GAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAa1DC,GAAQC,YAAe,CAE3BC,QAAS,CACP5E,SAAU6E,IAEZb,cACAc,UAAUC,ICnCZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEI,cAAC,EAAD,QAINS,SAASC,eAAe,U,kBCjB1BlH,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.babdf38e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ElementContactList_item__3GcFD\",\"span\":\"ElementContactList_span__1us56\",\"btnList\":\"ElementContactList_btnList__1nuQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__35zO-\",\"span\":\"Filter_span__25kJy\",\"input\":\"Filter_input__1oH-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1EPYW\",\"title\":\"Container_title__3RLjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1ifF1\"};","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n// const deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport {\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n    axios\r\n      .get('/contacts')\r\n      .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n      .catch(error => dispatch(fetchContactError(error)));\r\n}\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { addContact, deleteContact, fetchContacts };\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport s from './ContactForm.module.css';\nimport {addContact } from 'redux/contacts/contacts-operations';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addNoRepeatContact = (state, contacts) => {\n    const { name, number } = state;\n    if (\n      contacts.some(\n        contacts => contacts.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some(contacts => contacts.number === number)) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(state);\n    this.reset();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { contacts } = this.props;\n    this.addNoRepeatContact(this.state, contacts);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId} className=\"lable\">\n            <span className={s.span}>Name</span>\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              id={this.nameInputId}\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId} className=\"lable\">\n            <span className={s.span}>Number</span>\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              id={this.numberInputId}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nimport { changeFilter } from 'redux/contacts/contacts-actions';\n\nconst filterInputId = uuidv4();\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label htmlFor={filterInputId}>\n      <span className={s.span}>Find contacts by name and number</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        id={filterInputId}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ElementContactList.module.css';\n\nconst ElementContactList = ({ contacts, deleteContact }) => {\n  return contacts.map(({ name, number, id }) => {\n    return (\n      <li className={s.item} key={id}>\n        <span className={s.span}></span>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={s.btnList}\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n};\n\nElementContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ElementContactList;\n","import { connect } from 'react-redux';\n\nimport {deleteContact} from 'redux/contacts/contacts-operations';\nimport ElementContactList from './ElementContactList';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.includes(filter),\n  );\n};\n\nconst mapStateToProps = ({contacts: { items, filter }}) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementContactList);\n","import React from 'react';\n\nimport ElementContactList from 'components/ElementContactList';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  return (\n    <ul className={s.list}>\n      <ElementContactList />\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children, title }) => (\n  <div className={s.container}>\n    <h1 className={s.title}>{title}</h1>\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\n\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Container from 'components/Container';\nimport {fetchContacts} from 'redux/contacts/contacts-operations'\n\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\ncomponentDidMount() {\n  this.props.onFetchContacts()\n}\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const nextContacts = this.props.contacts;\n  //   const prevContacts = prevProps.contacts;\n\n  //   if (nextContacts !== prevContacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(nextContacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchContacts: () => dispatch(fetchContacts())\n}) \n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsTest from 'data/contactsTest.json';\nimport {\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst items = createReducer(contactsTest, {\n  [fetchContactSuccess]: (state, {payload}) => payload,\n  [addContactSuccess]: (state, action) => [action.payload, ...state],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const myMiddleware = store => next => action => {\n//   console.log('Hello i am myMiddleware');\n//   next(action)\n// }\n// const myMiddlewareTwo = store => next => action => {\n//   console.log('Hello i am myMiddlewareTwo');\n//   next(action)\n// }\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  //  myMiddlewareTwo\n];\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  // reducer: persistReducer(persistConfig, contactsReducer),\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n// export { store, persistor };\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n// import { store, persistor } from 'redux/store';\nimport { store } from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1KNqy\",\"input\":\"ContactForm_input__1AhWn\",\"span\":\"ContactForm_span__167Cu\",\"button\":\"ContactForm_button__QwcZz\"};"],"sourceRoot":""}